name: Auto Assign Issues

on:
  issue_comment:
    types: [created]

jobs:
  assign_issue:
    if: contains(github.event.comment.body, '/assign')
    runs-on: ubuntu-latest

    permissions:
      issues: write
      contents: read

    steps:
      - name: Check if comment is from issue author or collaborator
        id: check_permissions
        uses: actions/github-script@v7
        with:
          script: |
            const { data: issue } = await github.rest.issues.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number
            });

            const commenter = context.payload.comment.user.login;
            const issueAuthor = issue.user.login;

            // Check if commenter is the issue author
            if (commenter === issueAuthor) {
              return true;
            }

            // Check if commenter is a collaborator
            try {
              await github.rest.repos.checkCollaborator({
                owner: context.repo.owner,
                repo: context.repo.repo,
                username: commenter
              });
              return true;
            } catch (error) {
              return false;
            }

      - name: Assign issue to commenter
        if: steps.check_permissions.outputs.result == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const commenter = context.payload.comment.user.login;

            // Check if issue is already assigned
            const { data: issue } = await github.rest.issues.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number
            });

            if (issue.assignees.length > 0) {
              // Issue is already assigned
              const assignees = issue.assignees.map(a => a.login).join(', ');
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: `‚ùå This issue is already assigned to: ${assignees}\n\nIf you'd like to work on this issue, please ask the current assignee(s) or a maintainer to unassign it first.`
              });
              return;
            }

            // Assign the issue
            await github.rest.issues.addAssignees({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              assignees: [commenter]
            });

            // Add a confirmation comment
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: `‚úÖ Issue assigned to @${commenter}!\n\n**Next steps:**\n1. Read our [Contributing Guidelines](.github/CONTRIBUTING.md)\n2. Check for any issue dependencies\n3. Set up your development environment using [SETUP.md](.github/SETUP.md)\n4. Create a branch: \`git checkout -b feature/#${context.issue.number}\`\n5. Start working on the issue!\n\nGood luck! üöÄ`
            });

            // Add "in-progress" label if it exists
            try {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                labels: ['in-progress']
              });
            } catch (error) {
              console.log('in-progress label does not exist, skipping...');
            }

      - name: Handle unauthorized assignment attempt
        if: steps.check_permissions.outputs.result != 'true'
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: `‚ùå Sorry, only the issue author or project collaborators can assign issues.\n\nIf you'd like to contribute:\n1. Fork the repository\n2. Check our [Contributing Guidelines](.github/CONTRIBUTING.md)\n3. Comment on the issue expressing your interest\n4. Wait for a maintainer to assign it to you\n\nThanks for your interest in contributing! üôè`
            });
